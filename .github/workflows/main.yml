name: Full Auto Android & JVM Build (Auto JDK)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Parse Java toolchain version from build.gradle.kts or build.gradle
      - name: Detect Java version from toolchain
        id: detect-jdk
        run: |
          version=$(grep -E 'languageVersion\s*\.\s*set\s*\(\s*JavaLanguageVersion\.of\([0-9]+' build.gradle.kts | grep -oE '[0-9]+' | head -1)
          if [ -z "$version" ]; then
            version=$(grep -E 'languageVersion\s*=\s*JavaLanguageVersion\.of\([0-9]+' build.gradle.kts | grep -oE '[0-9]+' | head -1)
          fi
          if [ -z "$version" ]; then
            # Fallback: default to 24 if not found
            version=24
          fi
          echo "Detected Java version: $version"
          echo "jdk_version=$version" >> $GITHUB_OUTPUT

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'oracle'
          java-version: ${{ steps.detect-jdk.outputs.jdk_version }}

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Make Gradle Wrapper Executable
        run: chmod +x ./gradlew

      - name: Build Debug APK
        run: ./gradlew assembleDebug --stacktrace
        continue-on-error: true

      - name: Build JVM Libraries
        run: ./gradlew build --stacktrace
        continue-on-error: true

      - name: Find APK Path
        id: apk-path
        run: |
          APK_PATH=$(find . -name '*.apk' | grep debug | head -n 1 || true)
          echo "apk_path=$APK_PATH" >> "$GITHUB_OUTPUT"

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        if: steps.apk-path.outputs.apk_path != ''
        with:
          name: debug-apk
          path: ${{ steps.apk-path.outputs.apk_path }}

      - name: Find JARs
        id: jar-paths
        run: |
          echo "jar_paths=$(find . -type f -name '*.jar' | grep -v '\.kotlin_module' | paste -sd ',' -)" >> "$GITHUB_OUTPUT"

      - name: Upload JVM JARs
        uses: actions/upload-artifact@v4
        if: steps.jar-paths.outputs.jar_paths != ''
        with:
          name: jvm-jars
          path: ${{ steps.jar-paths.outputs.jar_paths }}
